from contextlib import asynccontextmanager

import uvicorn
from fastapi import FastAPI

from api.routers import all_routers
from db.db import create_tables
from Models.users import UsersOrm
from Models.records import Records




@asynccontextmanager
async def lifespan(app: FastAPI):
    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –î–û –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    print("üîÑ Starting table creation...")
    await create_tables()
    print("‚úÖ Database tables created!")

    # –î–∞–¥–∏–º –≤—Ä–µ–º—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
    from sqlalchemy.testing import asyncio
    await asyncio.sleep(1)

    yield

    print("üõë Application shutdown")
app = FastAPI(
    title="–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–æ–≥ Jira/Asana"
)

for router in all_routers:
    app.include_router(router)


if __name__ == "__main__":
    uvicorn.run(app="main:app", reload=True)